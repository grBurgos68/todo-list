{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grbur\\\\OneDrive\\\\Escritorio\\\\todo-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport './index.css';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) errors.emailError = 'Field required';\n      if (!/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(values.emailField)) errors.emailInvalidError = 'Username should be an email';\n      if (!values.pswField) errors.pswError = 'Field required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), formik.errors.emailError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }, this) : null, formik.errors.emailInvalidError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailInvalidError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 44\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), formik.errors.pswError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","emailField","pswField","onSubmit","values","console","log","alert","validate","errors","emailError","test","emailInvalidError","pswError","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onChange","handleChange","value","style","color","_c","$RefreshReg$"],"sources":["C:/Users/grbur/OneDrive/Escritorio/todo-list/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport './index.css';\nimport {useFormik} from 'formik';\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\nconst formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n\n    },\n    onSubmit: values =>{\n      console.log('form:', values);\n      alert(\"Login Successful\");\n\n\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.emailField) errors.emailError = 'Field required';\n      if(!(/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/).test(values.emailField)) errors.emailInvalidError = 'Username should be an email';\n      if(!values.pswField) errors.pswError = 'Field required';\n    \n\n      return errors;\n    }\n});\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>username</div>\n        <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\n        {formik.errors.emailError ? <div style={{color:'red'}}>{formik.errors.emailError}</div>: null}\n        {formik.errors.emailInvalidError ? <div style={{color:'red'}}>{formik.errors.emailInvalidError}</div>: null}\n        \n        <div>Password</div>\n        <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\n        {formik.errors.pswError ? <div style={{color:'red'}}>{formik.errors.pswError}</div>: null}\n        <button name=\"submitBtn\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}