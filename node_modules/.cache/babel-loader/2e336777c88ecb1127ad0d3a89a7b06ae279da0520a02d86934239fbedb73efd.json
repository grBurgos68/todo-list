{"ast":null,"code":"import React from\"react\";// TODO: import useFormik from formik library\nimport'./index.css';import{useFormik}from'formik';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// TODO: add a const called formik assigned to useFormik()\nvar formik=useFormik({initialValues:{emailField:'',pswField:''},onSubmit:function onSubmit(values){console.log('form:',values);alert(\"Login Successful\");},validate:function validate(values){var errors={};if(!values.emailField)errors.emailError='Field required';if(!/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(values.emailField))errors.emailInvalidError='Username should be an email';if(!values.pswField)errors.pswError='Field required';return errors;}});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:\"username\"}),/*#__PURE__*/_jsx(\"input\",{name:\"emailField\",type:\"text\",onChange:formik.handleChange,value:formik.values.emailField}),formik.errors.emailError?/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:formik.errors.emailError}):null,formik.errors.emailInvalidError?/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:formik.errors.emailInvalidError}):null,/*#__PURE__*/_jsx(\"div\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{name:\"pswField\",type:\"text\",onChange:formik.handleChange,value:formik.values.pswField}),formik.errors.pswError?/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:formik.errors.pswError}):null,/*#__PURE__*/_jsx(\"button\",{name:\"submitBtn\",type:\"submit\",children:\"Submit\"})]})});}export default App;","map":{"version":3,"names":["React","useFormik","jsx","_jsx","jsxs","_jsxs","App","formik","initialValues","emailField","pswField","onSubmit","values","console","log","alert","validate","errors","emailError","test","emailInvalidError","pswError","children","handleSubmit","name","type","onChange","handleChange","value","style","color"],"sources":["C:/Users/grbur/OneDrive/Escritorio/FormkStarter/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport './index.css';\nimport {useFormik} from 'formik';\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\nconst formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n\n    },\n    onSubmit: values =>{\n      console.log('form:', values);\n      alert(\"Login Successful\");\n\n\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.emailField) errors.emailError = 'Field required';\n      if(!(/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/).test(values.emailField)) errors.emailInvalidError = 'Username should be an email';\n      if(!values.pswField) errors.pswError = 'Field required';\n    \n\n      return errors;\n    }\n});\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>username</div>\n        <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\n        {formik.errors.emailError ? <div style={{color:'red'}}>{formik.errors.emailError}</div>: null}\n        {formik.errors.emailInvalidError ? <div style={{color:'red'}}>{formik.errors.emailInvalidError}</div>: null}\n        \n        <div>Password</div>\n        <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\n        {formik.errors.pswError ? <div style={{color:'red'}}>{formik.errors.pswError}</div>: null}\n        <button name=\"submitBtn\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,MAAO,aAAa,CACpB,OAAQC,SAAS,KAAO,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACjC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACF,GAAM,CAAAC,MAAM,CAAGN,SAAS,CAAC,CACrBO,aAAa,CAAE,CACbC,UAAU,CAAE,EAAE,CACdC,QAAQ,CAAE,EAEZ,CAAC,CACDC,QAAQ,CAAE,SAAAA,SAAAC,MAAM,CAAG,CACjBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEF,MAAM,CAAC,CAC5BG,KAAK,CAAC,kBAAkB,CAAC,CAG3B,CAAC,CACDC,QAAQ,CAAE,SAAAA,SAAAJ,MAAM,CAAI,CAClB,GAAI,CAAAK,MAAM,CAAG,CAAC,CAAC,CACf,GAAG,CAACL,MAAM,CAACH,UAAU,CAAEQ,MAAM,CAACC,UAAU,CAAG,gBAAgB,CAC3D,GAAG,CAAE,iEAAiE,CAAEC,IAAI,CAACP,MAAM,CAACH,UAAU,CAAC,CAAEQ,MAAM,CAACG,iBAAiB,CAAG,6BAA6B,CACzJ,GAAG,CAACR,MAAM,CAACF,QAAQ,CAAEO,MAAM,CAACI,QAAQ,CAAG,gBAAgB,CAGvD,MAAO,CAAAJ,MAAM,CACf,CACJ,CAAC,CAAC,CACA,mBACEd,IAAA,QAAAmB,QAAA,cACEjB,KAAA,SAAMM,QAAQ,CAAEJ,MAAM,CAACgB,YAAa,CAAAD,QAAA,eAClCnB,IAAA,QAAAmB,QAAA,CAAK,UAAQ,EAAM,cACnBnB,IAAA,UAAOqB,IAAI,CAAC,YAAY,CAACC,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAEnB,MAAM,CAACoB,YAAa,CAACC,KAAK,CAAErB,MAAM,CAACK,MAAM,CAACH,UAAW,EAAE,CACrGF,MAAM,CAACU,MAAM,CAACC,UAAU,cAAGf,IAAA,QAAK0B,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,CAAAR,QAAA,CAAEf,MAAM,CAACU,MAAM,CAACC,UAAU,EAAO,CAAE,IAAI,CAC5FX,MAAM,CAACU,MAAM,CAACG,iBAAiB,cAAGjB,IAAA,QAAK0B,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,CAAAR,QAAA,CAAEf,MAAM,CAACU,MAAM,CAACG,iBAAiB,EAAO,CAAE,IAAI,cAE3GjB,IAAA,QAAAmB,QAAA,CAAK,UAAQ,EAAM,cACnBnB,IAAA,UAAOqB,IAAI,CAAC,UAAU,CAACC,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAEnB,MAAM,CAACoB,YAAa,CAACC,KAAK,CAAErB,MAAM,CAACK,MAAM,CAACF,QAAS,EAAE,CACjGH,MAAM,CAACU,MAAM,CAACI,QAAQ,cAAGlB,IAAA,QAAK0B,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,CAAAR,QAAA,CAAEf,MAAM,CAACU,MAAM,CAACI,QAAQ,EAAO,CAAE,IAAI,cACzFlB,IAAA,WAAQqB,IAAI,CAAC,WAAW,CAACC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,QAAM,EAAS,GACjD,EACH,CAEV,CAEA,cAAe,CAAAhB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}